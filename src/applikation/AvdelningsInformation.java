/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package applikation;

import java.util.ArrayList;
import oru.inf.InfDB;
import javax.swing.JOptionPane;
import oru.inf.InfException;

/**
 *
 * @author juliadyrebrant
 */
public class AvdelningsInformation extends javax.swing.JFrame {
    private InfDB idb;
    private String inloggadAnvandare;
    private String avdid;
    private String avdelning;

    /**
     * Creates new form AvdelningsInformation
     */
    public AvdelningsInformation(InfDB idb, String inloggadAnvandare, String avdelning, String avdid) {
        this.idb = idb;
        this.inloggadAnvandare = inloggadAnvandare;
        this.avdelning = avdelning; 
        this.avdid = avdid;
        
        initComponents();
        fyllAllaFalt();
        
    }

    public void fyllAllaFalt()
    {
        Avdelning avdelning = new Avdelning(idb);
        String namn = avdelning.getNamn(avdid);
        txtNamn.setText(namn);
        
        String beskrivning = avdelning.getBeskrivning(avdid);
        txtBeskrivning.setText(beskrivning);
        
        String adress = avdelning.getAdress(avdid);
        txtAdress.setText(adress);
        
        String epost = avdelning.getEpost(avdid);
        txtEpost.setText(epost);
        
        String telefon = avdelning.getTelefon(avdid);
        txtTelefon.setText(telefon);
        
        String stad = avdelning.getStad(avdid);
        txtStad.setText(stad);
    
        String chef = avdelning.getChef(avdid);
        txtChef.setText(chef);
        
    }
    
    
    
    
      
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblNamn = new javax.swing.JLabel();
        lblBeskrivning = new javax.swing.JLabel();
        lblAdress = new javax.swing.JLabel();
        lblEpost = new javax.swing.JLabel();
        lblTelefon = new javax.swing.JLabel();
        lblStad = new javax.swing.JLabel();
        txtNamn = new javax.swing.JTextField();
        txtBeskrivning = new javax.swing.JTextField();
        txtAdress = new javax.swing.JTextField();
        txtEpost = new javax.swing.JTextField();
        txtTelefon = new javax.swing.JTextField();
        txtStad = new javax.swing.JTextField();
        btnSpara = new javax.swing.JButton();
        btnTillbakatillmenyn = new javax.swing.JButton();
        lblChef = new javax.swing.JLabel();
        txtChef = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblNamn.setText("Namn");

        lblBeskrivning.setText("Beskrivning");

        lblAdress.setText("Adress");

        lblEpost.setText("Epost");

        lblTelefon.setText("Telefon");

        lblStad.setText("Stad");

        btnSpara.setText("Spara");
        btnSpara.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSparaActionPerformed(evt);
            }
        });

        btnTillbakatillmenyn.setText("Tillbaka till menyn");
        btnTillbakatillmenyn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTillbakatillmenynActionPerformed(evt);
            }
        });

        lblChef.setText("Chef");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblChef)
                    .addComponent(lblStad)
                    .addComponent(lblTelefon)
                    .addComponent(lblEpost)
                    .addComponent(lblAdress)
                    .addComponent(lblNamn)
                    .addComponent(lblBeskrivning))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtBeskrivning)
                    .addComponent(txtNamn, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtEpost)
                    .addComponent(txtAdress, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtStad)
                    .addComponent(txtTelefon, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnTillbakatillmenyn)
                        .addGap(18, 18, 18)
                        .addComponent(btnSpara)
                        .addGap(0, 59, Short.MAX_VALUE))
                    .addComponent(txtChef))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNamn)
                    .addComponent(txtNamn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblBeskrivning)
                    .addComponent(txtBeskrivning, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAdress)
                    .addComponent(txtAdress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEpost)
                    .addComponent(txtEpost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTelefon)
                    .addComponent(txtTelefon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblStad)
                    .addComponent(txtStad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblChef)
                    .addComponent(txtChef, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnTillbakatillmenyn)
                    .addComponent(btnSpara))
                .addGap(29, 29, 29))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnTillbakatillmenynActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTillbakatillmenynActionPerformed
        this.dispose();
        new Meny(idb, inloggadAnvandare).setVisible(true); 
    }//GEN-LAST:event_btnTillbakatillmenynActionPerformed

    private void btnSparaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSparaActionPerformed
                                    
    String namn = txtNamn.getText().trim();
    String beskrivning = txtBeskrivning.getText().trim();
    String adress = txtAdress.getText().trim();
    String epost = txtEpost.getText().trim();
    String telefon = txtTelefon.getText().trim();
    String stad = txtStad.getText().trim();
    String chef = txtChef.getText().trim();



    try {
        Avdelning avdelning = new Avdelning(idb);
        Validering validering = new Validering(idb);


        // Hämta AID
        String sqlFraga = "SELECT aid FROM anstalld WHERE CONCAT(fornamn, ' ', efternamn) = '" + chef + "'";
        String hamtatAid = idb.fetchSingle(sqlFraga);

        // Hämta SID
        String sqlFragaHamtaSid = "SELECT sid FROM stad WHERE namn = '" + stad + "'";
        String hamtatSid = idb.fetchSingle(sqlFragaHamtaSid);


	

        // Validering
        String felmeddelanden = "";

        if (!avdelning.kontrolleraNamn(namn) || validering.arTextFaltTomt(namn)) {
            felmeddelanden += "- Fältet kan ej vara tomt och namn får endast innehålla bokstäver.\n";
        }
        if (!avdelning.kontrolleraBeskrivning(beskrivning) || validering.arTextFaltTomt(beskrivning)) {
            felmeddelanden += "- Beskrivning måste vara mellan 2 och 300 tecken.\n";
        }
        if (!avdelning.kontrolleraAdress(adress) || validering.arTextFaltTomt(adress)) {
            felmeddelanden += "- Adress måste innehålla både bokstäver och siffror.\n";
        }
        if (!avdelning.kontrolleraEpost(epost) || validering.arTextFaltTomt(epost)) {
            felmeddelanden += "- Epost måste sluta på @ngo.org.\n";
        }
        if (!avdelning.kontrolleraTelefon(telefon) || validering.arTextFaltTomt(telefon)) {
            felmeddelanden += "- Telefonnummer måste vara 10 siffror.\n";
        }
        if (!validering.kontrolleraStadFinns(stad) || validering.arTextFaltTomt(stad)) {
            felmeddelanden += "- Staden måste finnas i databasen.\n";
        }
        if (!(validering.kontrolleraOmAnstalldFinns(chef)) || validering.arTextFaltTomt(chef)) {
            felmeddelanden += "- Fel i chef: Fältet kan ej vara tomt och angivet namn måste vara en befintlig anställd som tillhör denna avdelning. Vänligen se till att både förnamn och efternamn har stor bokstav.\n";
        }

        if (!felmeddelanden.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Följande fel måste rättas till:\n" + felmeddelanden);
            fyllAllaFalt();
            return;
            
           
        }
        
        if (hamtatAid == null || hamtatSid == null) {
            JOptionPane.showMessageDialog(null, "Kunde inte hämta chef eller stad från databasen.");
            return;
        }

        else{
        // Uppdatera databasen
        String sql = "UPDATE AVDELNING SET NAMN = '" + namn + 
                     "', BESKRIVNING = '" + beskrivning + 
                     "', ADRESS = '" + adress + 
                     "', EPOST = '" + epost + 
                     "', TELEFON = '" + telefon + 
                     "', STAD = " + hamtatSid + 
                     ", CHEF = " + hamtatAid +
                     " WHERE avdid = " + avdid;

        idb.update(sql);
        JOptionPane.showMessageDialog(null, "Uppgifterna har sparats.");
        fyllAllaFalt();
        
        }

    } catch (InfException e) {
        JOptionPane.showMessageDialog(null, "Fel vid hämtning eller uppdatering: " + e.getMessage());
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, "Allmänt fel: " + e.getMessage());
    }
}//GEN-LAST:event_btnSparaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AvdelningsInformation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AvdelningsInformation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AvdelningsInformation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AvdelningsInformation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
              //  new AvdelningsInformation().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSpara;
    private javax.swing.JButton btnTillbakatillmenyn;
    private javax.swing.JLabel lblAdress;
    private javax.swing.JLabel lblBeskrivning;
    private javax.swing.JLabel lblChef;
    private javax.swing.JLabel lblEpost;
    private javax.swing.JLabel lblNamn;
    private javax.swing.JLabel lblStad;
    private javax.swing.JLabel lblTelefon;
    private javax.swing.JTextField txtAdress;
    private javax.swing.JTextField txtBeskrivning;
    private javax.swing.JTextField txtChef;
    private javax.swing.JTextField txtEpost;
    private javax.swing.JTextField txtNamn;
    private javax.swing.JTextField txtStad;
    private javax.swing.JTextField txtTelefon;
    // End of variables declaration//GEN-END:variables
}
