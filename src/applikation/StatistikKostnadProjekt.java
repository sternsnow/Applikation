/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package applikation;

import java.util.ArrayList;
import java.util.HashMap;
import javax.swing.table.DefaultTableModel;
import oru.inf.InfDB;
import oru.inf.InfException;

/**
 *
 * @author karlb
 */
public class StatistikKostnadProjekt extends javax.swing.JFrame {
    
    private InfDB idb;
    private String inloggadAnvandare;
    private String inloggadAnvandareAid;
    /**
     * Creates new form StatistikKostnadProjekt
     */
    public StatistikKostnadProjekt(InfDB idb, String inloggadAnvandare, String inloggadAnvandareAid) {
        this.idb = idb;
        this.inloggadAnvandare = inloggadAnvandare;
        this.inloggadAnvandareAid = inloggadAnvandareAid;
        initComponents();
        fyllProjektTabell();
        fyllKostnadTabell();
        
    }

    public void fyllProjektTabell() {
    try {
        DefaultTableModel model = (DefaultTableModel) tblProjekt.getModel();
        model.setRowCount(0);

        String sql = "SELECT projektnamn, kostnad, status FROM projekt WHERE projektchef = " + inloggadAnvandareAid + 
             " AND (status = 'Avslutat' OR status = 'Pågående')";

        ArrayList<HashMap<String, String>> lista = idb.fetchRows(sql);

        if (lista != null) {
            for (HashMap<String, String> projekt : lista) {
                model.addRow(new Object[]{
                    projekt.get("projektnamn"),
                    projekt.get("kostnad"),
                    projekt.get("status")
                });
            }
        }

    } catch (InfException ex) {
        System.out.println("Kunde inte hämta projekt: " + ex.getMessage());
    }
}
    public void fyllKostnadTabell() {
    try {
        DefaultTableModel model = (DefaultTableModel) tblStatistikKostnad.getModel();
        model.setRowCount(0); // Rensa tidigare rader

        // Hämta statistik över projekt som antingen är avslutade eller pågående och där den inlogggade är projektchef 
            String sql = "SELECT MIN(kostnad) AS min_kostnad, " +
             "MAX(kostnad) AS max_kostnad, " +
             "SUM(kostnad) AS total_kostnad " +
             "FROM projekt WHERE projektchef = " + inloggadAnvandareAid + 
             " AND (status = 'Avslutat' OR status = 'Pågående')";

        HashMap<String, String> statistik = idb.fetchRow(sql);

        if (statistik != null && !statistik.isEmpty()) {
            String minKostnad = statistik.get("min_kostnad");
            String maxKostnad = statistik.get("max_kostnad");
            String totalKostnad = statistik.get("total_kostnad");

            // Lägg till en rad med statistikvärdena
            model.addRow(new Object[]{
                minKostnad + " kr",
                maxKostnad + " kr",
                totalKostnad + " kr"
            });
        }

    } catch (InfException ex) {
        System.out.println("Kunde inte hämta kostnadsstatistik: " + ex.getMessage());
    }
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblStatitsik = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblProjekt = new javax.swing.JTable();
        btnTillbakaTillMenyn = new javax.swing.JButton();
        lblOvrigStatistik = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblStatistikKostnad = new javax.swing.JTable();
        BtnTillbakaTillForegaende = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblStatitsik.setText("Statistik över kostnaden för alla projekt jag är/varit projektansvarig för:");

        tblProjekt.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Projektnamn", "Kostnad", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblProjekt);

        btnTillbakaTillMenyn.setText("Tillbaka Till Menyn");
        btnTillbakaTillMenyn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTillbakaTillMenynActionPerformed(evt);
            }
        });

        lblOvrigStatistik.setText("Övrig statistik:");

        tblStatistikKostnad.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null}
            },
            new String [] {
                "Min kostnad", "Max kostnad", "Total kostnad"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblStatistikKostnad);

        BtnTillbakaTillForegaende.setText("Tillbaka till föregående sida");
        BtnTillbakaTillForegaende.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnTillbakaTillForegaendeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(lblStatitsik, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 384, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(BtnTillbakaTillForegaende)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                        .addComponent(btnTillbakaTillMenyn, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(14, 14, 14))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 441, Short.MAX_VALUE)
                            .addComponent(lblOvrigStatistik, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblOvrigStatistik)
                    .addComponent(lblStatitsik))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnTillbakaTillMenyn)
                    .addComponent(BtnTillbakaTillForegaende))
                .addContainerGap(46, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnTillbakaTillMenynActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTillbakaTillMenynActionPerformed
        this.dispose();
        new Meny(idb, inloggadAnvandare).setVisible(true);
    }//GEN-LAST:event_btnTillbakaTillMenynActionPerformed

    private void BtnTillbakaTillForegaendeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnTillbakaTillForegaendeActionPerformed
this.dispose();
new SeProjekt (idb, inloggadAnvandare, inloggadAnvandareAid).setVisible(true);
    }//GEN-LAST:event_BtnTillbakaTillForegaendeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StatistikKostnadProjekt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StatistikKostnadProjekt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StatistikKostnadProjekt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StatistikKostnadProjekt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new StatistikKostnadProjekt().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnTillbakaTillForegaende;
    private javax.swing.JButton btnTillbakaTillMenyn;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblOvrigStatistik;
    private javax.swing.JLabel lblStatitsik;
    private javax.swing.JTable tblProjekt;
    private javax.swing.JTable tblStatistikKostnad;
    // End of variables declaration//GEN-END:variables
}
