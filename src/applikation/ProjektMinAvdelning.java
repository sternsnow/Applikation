/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package applikation;

import java.util.ArrayList;
import java.util.HashMap;
import javax.swing.table.DefaultTableModel;
import oru.inf.InfDB;
import oru.inf.InfException;


/**
 *
 * @author karlb
 */
public class ProjektMinAvdelning extends javax.swing.JFrame {

    private InfDB idb;
    private String inloggadAnvandare;
    private String inloggadAnvandareAid;
    private Anstalld anstalld;
    private String valdStatus;
    
    
    /**
     * Creates new form ProjektMinAvdelning
     */
    public ProjektMinAvdelning(InfDB idb, String inloggadAnvandare, String inloggadAnvandareAid) {
        initComponents();
        this.idb = idb;
        this.inloggadAnvandare = inloggadAnvandare;
        this.inloggadAnvandareAid = inloggadAnvandareAid;
        this.valdStatus = "Alla";
        this.anstalld = new Anstalld(idb);
        fyllLista();
    }
    
    public void fyllLista() {
    try {
        DefaultTableModel model = (DefaultTableModel) tblProjekt.getModel();
        model.setRowCount(0); // Töm tabellen först

        // Hämta avdelningen för den inloggade användaren
        String avdelning = anstalld.getAvdelning(inloggadAnvandareAid);

        // Hämta alla AID för anställda i samma avdelning
        String sqlAnstallda = "SELECT aid FROM anstalld WHERE avdelning = '" + avdelning + "'";
        ArrayList<String> anstallda = idb.fetchColumn(sqlAnstallda);

        // Hämta alla projekt där dessa personer är delaktiga via ans_proj
        ArrayList<String> projektpids = new ArrayList<>();

        for (String aid : anstallda) {
            String sqlPid = "SELECT pid FROM ans_proj WHERE aid = " + aid;
            ArrayList<String> pids = idb.fetchColumn(sqlPid);

            if (pids != null) {
                for (String pid : pids) {
                    if (!projektpids.contains(pid)) {
                        projektpids.add(pid); // undvik dubbletter
                    }
                }
            }
        }

        // Hämta alla projekt där någon i avdelningen är projektchef
        for (String aid : anstallda) {
            String sqlPidChef = "SELECT pid FROM projekt WHERE projektchef = " + aid;
            ArrayList<String> projektChefPids = idb.fetchColumn(sqlPidChef);

            if (projektChefPids != null) {
                for (String pid : projektChefPids) {
                    if (!projektpids.contains(pid)) {
                        projektpids.add(pid); 
                    }
                }
            }
        }

        // Hämta projektuppgifter för varje projekt
        for (String pid : projektpids) {
            String sqlProjekt;

            if (valdStatus.equals("Alla")) {
                sqlProjekt = "SELECT projektnamn, beskrivning, startdatum, slutdatum, kostnad, status, prioritet, projektchef, land " +
                             "FROM projekt WHERE pid = " + pid;
            } else {
                sqlProjekt = "SELECT projektnamn, beskrivning, startdatum, slutdatum, kostnad, status, prioritet, projektchef, land " +
                             "FROM projekt WHERE pid = " + pid + " AND status = '" + valdStatus + "'";
            }

            HashMap<String, String> projekt = idb.fetchRow(sqlProjekt);

            if (projekt != null && !projekt.isEmpty()) {
                model.addRow(new Object[]{
                    projekt.get("projektnamn"),
                    projekt.get("beskrivning"),
                    projekt.get("startdatum"),
                    projekt.get("slutdatum"),
                    projekt.get("kostnad"),
                    projekt.get("status"),
                    projekt.get("prioritet"),
                    projekt.get("projektchef"),
                    projekt.get("land")
                });
            }
        }

    } catch (InfException ex) {
        System.out.println("Fel: " + ex.getMessage());
    }
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblProjekt = new javax.swing.JTable();
        btnTillbakaTillMenyn = new javax.swing.JButton();
        lblFiltreraUtifranStatus = new javax.swing.JLabel();
        cbxStatus = new javax.swing.JComboBox<>();
        btnValj = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tblProjekt.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Projektnamn", "Beskrivning", "Startdatum", "Slutdatum", "Kostnad", "Status", "Prioritet", "Projektchef", "Land"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblProjekt);
        if (tblProjekt.getColumnModel().getColumnCount() > 0) {
            tblProjekt.getColumnModel().getColumn(5).setHeaderValue("Status");
        }

        btnTillbakaTillMenyn.setText("Tillbaka Till Menyn");
        btnTillbakaTillMenyn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTillbakaTillMenynActionPerformed(evt);
            }
        });

        lblFiltreraUtifranStatus.setText("Filtrera utifrån status");

        cbxStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Alla", "Planerat", "Pågående", "Avslutat", " " }));
        cbxStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxStatusActionPerformed(evt);
            }
        });

        btnValj.setText("Välj");
        btnValj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnValjActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblFiltreraUtifranStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnTillbakaTillMenyn, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(cbxStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnValj)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 648, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(lblFiltreraUtifranStatus)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cbxStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnValj)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnTillbakaTillMenyn))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnTillbakaTillMenynActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTillbakaTillMenynActionPerformed
        this.dispose();
        new Meny(idb, inloggadAnvandare).setVisible(true);
    }//GEN-LAST:event_btnTillbakaTillMenynActionPerformed

    private void cbxStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxStatusActionPerformed
     
        
    }//GEN-LAST:event_cbxStatusActionPerformed

    private void btnValjActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnValjActionPerformed
        String valdStrang = cbxStatus.getSelectedItem().toString();
        this.valdStatus = valdStrang;
        fyllLista();  
    }//GEN-LAST:event_btnValjActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ProjektMinAvdelning.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ProjektMinAvdelning.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ProjektMinAvdelning.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ProjektMinAvdelning.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new ProjektMinAvdelning().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnTillbakaTillMenyn;
    private javax.swing.JButton btnValj;
    private javax.swing.JComboBox<String> cbxStatus;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblFiltreraUtifranStatus;
    private javax.swing.JTable tblProjekt;
    // End of variables declaration//GEN-END:variables
}
