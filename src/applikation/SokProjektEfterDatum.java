/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package applikation;

import java.util.ArrayList;
import javax.swing.JOptionPane;
import oru.inf.InfDB;

/**
 *
 * @author karlb
 */
public class SokProjektEfterDatum extends javax.swing.JFrame {

    private InfDB idb;
    private String inloggadAnvandare;
    private String inloggadAnvandareAid;
    private Anstalld anstalld;
    private Validering validering;
    /**
     * Creates new form SokProjektEfterDatum
     */
    public SokProjektEfterDatum(InfDB idb, String inloggadAnvandare, String inloggadAnvandareAid) {
        initComponents();
        this.idb = idb;
        this.inloggadAnvandare = inloggadAnvandare;
        this.inloggadAnvandareAid = inloggadAnvandareAid;
        this.validering = new Validering(idb);
        this.anstalld  = new Anstalld(idb);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblSok = new javax.swing.JLabel();
        txtSokTom = new javax.swing.JTextField();
        btnSok = new javax.swing.JButton();
        txtSokFom = new javax.swing.JTextField();
        lblFom = new javax.swing.JLabel();
        lblTom = new javax.swing.JLabel();
        btnTillbakaTillMenyn = new javax.swing.JButton();
        BtnTillbakaTillForegaende = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblSok.setText("Sök efter aktiva projekt på min avdelning inom ett datum-span");

        btnSok.setText("Sök");
        btnSok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSokActionPerformed(evt);
            }
        });

        lblFom.setText("F.o.m");

        lblTom.setText("T.o.m");

        btnTillbakaTillMenyn.setText("Tillbaka till Menyn");
        btnTillbakaTillMenyn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTillbakaTillMenynActionPerformed(evt);
            }
        });

        BtnTillbakaTillForegaende.setText("Tillbaka till föregående sida");
        BtnTillbakaTillForegaende.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnTillbakaTillForegaendeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(BtnTillbakaTillForegaende)
                        .addGap(53, 53, 53)
                        .addComponent(btnTillbakaTillMenyn, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblSok)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblFom, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtSokFom, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblTom, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtSokTom, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(103, 103, 103)
                                .addComponent(btnSok)))
                        .addGap(24, 24, 24))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(lblSok)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSokFom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblFom, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSok))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSokTom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTom, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 155, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnTillbakaTillMenyn)
                    .addComponent(BtnTillbakaTillForegaende))
                .addGap(14, 14, 14))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSokActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSokActionPerformed
     String fom = txtSokFom.getText().trim();
    String tom = txtSokTom.getText().trim();

    if (validering.arTextFaltTomt(fom) || validering.arTextFaltTomt(tom)) {
        JOptionPane.showMessageDialog(null, "Ett eller flera fält är tomt. Vänligen försök igen.");
        return;
    }

    if (!validering.kontrolleraDatum(fom) || !validering.kontrolleraDatum(tom)) {
        JOptionPane.showMessageDialog(null, "Ange datum i formatet ÅÅÅÅ-MM-DD.");
        return;
    }

    try {
        // Hämta avdelningen för den inloggade användaren
        String avdelning = anstalld.getAvdelning(inloggadAnvandareAid);

        // Hämta alla anställda på samma avdelning
        String sqlAnstallda = "SELECT aid FROM anstalld WHERE avdelning = " + avdelning;
        ArrayList<String> anstallda = idb.fetchColumn(sqlAnstallda);

        if (anstallda == null || anstallda.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Inga anställda hittades på din avdelning.");
            return;
        }

        ArrayList<String> allaProjektPids = new ArrayList<>();

        // Hämta projekt från ans_proj kopplade till anställda, med status och datumfilter
        for (String aid : anstallda) {
            String sqlFragaHamtaAnstalldaPids = "SELECT ans_proj.pid FROM ans_proj " +
                 "JOIN projekt ON ans_proj.pid = projekt.pid " +
                 "WHERE ans_proj.aid = " + aid + " " +
                 "AND projekt.status = 'Pågående' " +
                 "AND projekt.startdatum >= '" + fom + "' " +
                 "AND projekt.slutdatum <= '" + tom + "'";
            ArrayList<String> pids = idb.fetchColumn(sqlFragaHamtaAnstalldaPids);
            if (pids != null) {
                for (String pid : pids) {
                    if (!allaProjektPids.contains(pid)) {
                        allaProjektPids.add(pid);
                    }
                }
            }
        }

        // Hämta projekt där anställda är projektchef, med status och datumfilter
        for (String aid : anstallda) {
            String sqlProjektChefPids = "SELECT pid FROM projekt " +
                                        "WHERE projektchef = " + aid + " " +
                                        "AND status = 'Pågående' " +
                                        "AND startdatum >= '" + fom + "' " +
                                        "AND slutdatum <= '" + tom + "'";
            ArrayList<String> projektChefPids = idb.fetchColumn(sqlProjektChefPids);
            if (projektChefPids != null) {
                for (String pid : projektChefPids) {
                    if (!allaProjektPids.contains(pid)) {
                        allaProjektPids.add(pid);
                    }
                }
            }
        }

        if (allaProjektPids.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Inga projekt hittades inom angivet datumspann för din avdelning.");
            return;
        }

        // Öppna fönstret med projekten
        ProjektUppgifterVisstDatum nyttFönster = new ProjektUppgifterVisstDatum(idb, inloggadAnvandare, inloggadAnvandareAid, allaProjektPids);
        nyttFönster.setVisible(true);
        this.dispose();

    } catch (Exception e) {
        System.out.println("Ett fel uppstod vid sökning: " + e.getMessage());
    }


    }//GEN-LAST:event_btnSokActionPerformed

    private void btnTillbakaTillMenynActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTillbakaTillMenynActionPerformed
        this.dispose();
        new Meny(idb, inloggadAnvandare).setVisible(true);
    }//GEN-LAST:event_btnTillbakaTillMenynActionPerformed

    private void BtnTillbakaTillForegaendeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnTillbakaTillForegaendeActionPerformed
this.dispose();
new Meny(idb, inloggadAnvandare).setVisible(true);
      }//GEN-LAST:event_BtnTillbakaTillForegaendeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SokProjektEfterDatum.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SokProjektEfterDatum.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SokProjektEfterDatum.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SokProjektEfterDatum.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new SokProjektEfterDatum().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnTillbakaTillForegaende;
    private javax.swing.JButton btnSok;
    private javax.swing.JButton btnTillbakaTillMenyn;
    private javax.swing.JLabel lblFom;
    private javax.swing.JLabel lblSok;
    private javax.swing.JLabel lblTom;
    private javax.swing.JTextField txtSokFom;
    private javax.swing.JTextField txtSokTom;
    // End of variables declaration//GEN-END:variables
}
